<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.glfs.chatgpt.data.infrastructure.dao.IOpenAIOrderDao">

    <resultMap id="userAccountMap" type="cn.glfs.chatgpt.data.infrastructure.po.OpenAIOrderPO">
        <id column="id" property="id"/>
        <result column="openid" property="openid"/>
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_quota" property="productQuota"/>
        <result column="order_id" property="orderId"/>
        <result column="order_time" property="orderTime"/>
        <result column="order_status" property="orderStatus"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="pay_type" property="payType"/>
        <result column="pay_url" property="payUrl"/>
        <result column="pay_amount" property="payAmount"/>
        <result column="transaction_id" property="transactionId"/>
        <result column="pay_status" property="payStatus"/>
        <result column="pay_time" property="payTime"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!--创建新订单-->
    <insert id="insert" parameterType="cn.glfs.chatgpt.data.infrastructure.po.OpenAIOrderPO">
        INSERT INTO openai_order(
            openid, product_id, product_name, product_quota, order_id,
            order_time, order_status, total_amount, pay_type, pay_status,
            pay_time, create_time, update_time)
        VALUES(
                  #{openid}, #{productId}, #{productName}, #{productQuota}, #{orderId},
                  #{orderTime}, #{orderStatus}, #{totalAmount}, #{payType}, #{payStatus},
                  #{payTime}, now(), now()
              )
    </insert>

    <!--根据订单id，商品id和订单状态为0-创建完成，查找订单id商品名支付状态订单金额
    ORDER BY id desc：这部分指定了查询结果按照id列进行降序排序。
    LIMIT 1：这是一个限制条件，它表示只返回满足上述条件的一行记录。
    -->
    <select id="queryUnpaidOrder" parameterType="cn.glfs.chatgpt.data.infrastructure.po.OpenAIOrderPO"
            resultMap="userAccountMap">
        SELECT order_id, product_name, pay_url, pay_status, total_amount
        FROM openai_order
        WHERE openid = #{openid} AND product_id = #{productId} AND order_status = 0
        ORDER BY id desc
            LIMIT 1
    </select>

    <!--根据用户id和订单id修改订单地址,支付状态,修改时间-->
    <update id="updateOrderPayInfo" parameterType="cn.glfs.chatgpt.data.infrastructure.po.OpenAIOrderPO">
        UPDATE openai_order SET
                                pay_url = #{payUrl},
                                pay_status = #{payStatus},
                                update_time = now()
        WHERE openid = #{openid} AND order_id = #{orderId}
    </update>

    <!--根据id和没有支付时间时修改订单状态为1（等待发货）,支付状态1（支付完成）,赋值支付金额,赋值支付时间,赋值交易单号,修改时间-->
    <update id="changeOrderPaySuccess" parameterType="cn.glfs.chatgpt.data.infrastructure.po.OpenAIOrderPO">
        UPDATE openai_order SET
                                order_status = 1, pay_status = 1,
                                pay_amount = #{payAmount},
                                pay_time = #{payTime},
                                transaction_id = #{transactionId},
                                update_time = now()
        WHERE order_id = #{orderId} AND pay_time is null
    </update>

    <!--根据订单id,查找订单全部信息-->
    <select id="queryOrder" parameterType="java.lang.String" resultMap="userAccountMap">
        SELECT openid, product_id, product_name, product_quota, order_id,
               order_time, order_status, total_amount, pay_type, pay_status,
               pay_time
        FROM openai_order
        WHERE order_id = #{orderId}
    </select>

    <!--根据订单id和订单状态为1（等待发货）,将订单状态修改为2发货完成-->
    <update id="updateOrderStatusDeliverGoods" parameterType="java.lang.String">
        UPDATE openai_order SET
            order_status = 2
        WHERE order_id = #{orderId} AND order_status = 1
    </update>

    <!--根据订单状态1（等待发货），支付状态为1（支付完成）按id增序输出，时间大于等于订单时间加上3分钟的时间间隔,最多输出10个
    -->
    <select id="queryReplenishmentOrder" resultType="java.lang.String">
        SELECT order_id as orderId FROM openai_order
        WHERE order_status = 1 AND pay_status = 1 AND NOW() >= order_time + INTERVAL 3 MINUTE
        ORDER BY id ASC
            LIMIT 10
    </select>

    <!--根据订单状态0（创建完成），支付状态为0（等待支付）时间大于等于订单时间加上1分钟的时间间隔,最多输出10条-->
    <select id="queryNoPayNotifyOrder" resultType="java.lang.String">
        SELECT order_id as orderId FROM openai_order
        WHERE order_status = 0 AND pay_status = 0 AND NOW() >= order_time + INTERVAL 1 MINUTE
        ORDER BY id ASC
            LIMIT 10
    </select>

    <!--根据订单状态0（创建完成），支付状态为0（等待支付）时间大于等于订单时间加上30分钟的时间间隔,最多输出50条-->
    <select id="queryTimeoutCloseOrderList" resultType="java.lang.String">
        SELECT order_id as orderId FROM openai_order
        WHERE order_status = 0 AND pay_status = 0 AND NOW() >= order_time + INTERVAL 30 MINUTE
        ORDER BY id ASC
            LIMIT 50
    </select>

    <!--根据订单id和支付状态为0（等待支付）去修改订单状态为3（系统关单），支付状态为3（放弃支付），修改时间设为现在-->
    <update id="changeOrderClose" parameterType="cn.glfs.chatgpt.data.infrastructure.po.OpenAIOrderPO">
        UPDATE openai_order SET
                                order_status = 3, pay_status = 3,
                                update_time = now()
        WHERE order_id = #{orderId} AND pay_status = 0
    </update>

</mapper>
